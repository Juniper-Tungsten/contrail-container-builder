#!/bin/bash

. ./network-functions-vrouter

function pkt_setup () {
    [ ! -f /sys/class/net/$1/queues/rx-0/rps_cpus ] && return 0
    declare q r s mask str i
    for f in /sys/class/net/$1/queues/rx-* ; do
        q="$(echo $f | cut -d '-' -f2)"
        r=$(($q%32))
        s=$(($q/32))
        ((mask=1<<$r))
        str=(`printf "%x" $mask`)
        if [ $s -gt 0 ]; then
            for ((i=0; i < $s; i++)) ; do
                str+=,00000000
            done
        fi
        echo $str > $f/rps_cpus
    done
    ip link set dev $1 up
}

function load_vrouter() {
    lsmod | grep -q vrouter && return 0
    free -h && sync && echo 2 >/proc/sys/vm/drop_caches && free -h
    load_kernel_module vrouter
}

function create_vhost0() {
    local phys_int=$1
    local phys_int_mac=$2
    load_vrouter
    pkt_setup pkt1
    pkt_setup pkt2
    pkt_setup pkt3
    vif --create vhost0 --mac $phys_int_mac
    vif --add $phys_int --mac $phys_int_mac --vrf 0 --vhost-phys --type physical
    vif --add vhost0 --mac $phys_int_mac --vrf 0 --type vhost --xconnect $phys_int
    ip link set dev vhost0 address $phys_int_mac
    ip link set dev vhost0 up
}

function ifup_init_vhost() {
    ip addr show dev vhost0 >/dev/null 2>&1 && return 0
    local phys_int=${BIND_INT}
    [ -z "$phys_int" ] && { echo "ERROR: BIND_INT in not set in ifcfg-vhost0" && return 1; }
    local phys_int_mac=${MACADDR}
    [ -z "$phys_int_mac" ] && phys_int_mac=$(cat /sys/class/net/${phys_int}/address)
    [ -z "$phys_int_mac" ] && { echo "ERROR: cant detect MAC for $phys_int" && return 1; }
    create_vhost0 $phys_int $phys_int_mac
}
